{"ast":null,"code":"const BASE_URL = 'http://localhost:3001';\n\nconst delay = ms => new Promise(resolve => setTimeout(resolve, ms));\n\nconst randomNumber = (min = 0, max = 1) => Math.floor(Math.random() * (max - min + 1)) + min;\n\nconst simulateNetworkLatency = (min = 30, max = 1500) => delay(randomNumber(min, max));\n\nasync function callApi(endpoint, options = {}) {\n  await simulateNetworkLatency();\n  options.headers = {\n    'Content-Type': 'application/json',\n    Accept: 'application/json'\n  };\n  const url = BASE_URL + endpoint;\n  const response = await fetch(url, options);\n  const data = await response.json();\n  return data;\n}\n\nconst api = {\n  tienda: {\n    listPedidosActivos() {\n      // return fetch('http://localhost:3001/api/pedidos/')\n      return callApi('/api/pedidos/pedido/activo');\n    },\n\n    listPedidosInactivos() {\n      // return fetch('http://localhost:3001/api/pedidos/')\n      return callApi('/api/pedidos/pedido/inactivos');\n    },\n\n    listClientes() {\n      // return fetch('http://localhost:3001/api/pedidos/')\n      return callApi('/api/user/');\n    },\n\n    listProductos() {\n      // return fetch('http://localhost:3001/api/pedidos/')\n      return callApi('/api/tienda/');\n    },\n\n    listProductosPorId(id) {\n      // return fetch('http://localhost:3001/api/pedidos/')\n      return callApi(`/api/pedidos/${id}`);\n    },\n\n    updateProductos(data) {\n      return callApi(`/api/tienda/`, {\n        method: 'PUT',\n        body: JSON.stringify(data)\n      });\n    },\n\n    logearUsuario(data) {\n      return callApi(`/auth/login`, {\n        method: 'post',\n        body: JSON.stringify(data)\n      });\n    },\n\n    // Lo hubiera llamado `delete`, pero `delete` es un keyword en JavaScript asi que no es buena idea :P\n    remove(badgeId) {\n      return callApi(`/badges/${badgeId}`, {\n        method: 'DELETE'\n      });\n    }\n\n  }\n};\nexport default api;","map":{"version":3,"sources":["/home/steban/Escritorio/app/interfas-usuario/interfas-usuario/src/app.js"],"names":["BASE_URL","delay","ms","Promise","resolve","setTimeout","randomNumber","min","max","Math","floor","random","simulateNetworkLatency","callApi","endpoint","options","headers","Accept","url","response","fetch","data","json","api","tienda","listPedidosActivos","listPedidosInactivos","listClientes","listProductos","listProductosPorId","id","updateProductos","method","body","JSON","stringify","logearUsuario","remove","badgeId"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,uBAAjB;;AAEA,MAAMC,KAAK,GAAGC,EAAE,IAAI,IAAIC,OAAJ,CAAYC,OAAO,IAAIC,UAAU,CAACD,OAAD,EAAUF,EAAV,CAAjC,CAApB;;AACA,MAAMI,YAAY,GAAG,CAACC,GAAG,GAAG,CAAP,EAAUC,GAAG,GAAG,CAAhB,KACnBC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBH,GAAG,GAAGD,GAAN,GAAY,CAA7B,CAAX,IAA8CA,GADhD;;AAEA,MAAMK,sBAAsB,GAAG,CAACL,GAAG,GAAG,EAAP,EAAWC,GAAG,GAAG,IAAjB,KAC7BP,KAAK,CAACK,YAAY,CAACC,GAAD,EAAMC,GAAN,CAAb,CADP;;AAGA,eAAeK,OAAf,CAAuBC,QAAvB,EAAiCC,OAAO,GAAG,EAA3C,EAA+C;AAC7C,QAAMH,sBAAsB,EAA5B;AAEAG,EAAAA,OAAO,CAACC,OAAR,GAAkB;AAChB,oBAAgB,kBADA;AAEhBC,IAAAA,MAAM,EAAE;AAFQ,GAAlB;AAKA,QAAMC,GAAG,GAAGlB,QAAQ,GAAGc,QAAvB;AACA,QAAMK,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,EAAMH,OAAN,CAA5B;AACA,QAAMM,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AAEA,SAAOD,IAAP;AACD;;AAED,MAAME,GAAG,GAAG;AACVC,EAAAA,MAAM,EAAE;AACNC,IAAAA,kBAAkB,GAAG;AACnB;AACA,aAAOZ,OAAO,CAAC,4BAAD,CAAd;AAED,KALK;;AAMNa,IAAAA,oBAAoB,GAAG;AACrB;AACA,aAAOb,OAAO,CAAC,+BAAD,CAAd;AACD,KATK;;AAUNc,IAAAA,YAAY,GAAG;AACb;AACA,aAAOd,OAAO,CAAC,YAAD,CAAd;AACD,KAbK;;AAaHe,IAAAA,aAAa,GAAG;AACjB;AACA,aAAOf,OAAO,CAAC,cAAD,CAAd;AACD,KAhBK;;AAgBHgB,IAAAA,kBAAkB,CAACC,EAAD,EAAK;AACxB;AACA,aAAOjB,OAAO,CAAE,gBAAeiB,EAAG,EAApB,CAAd;AACD,KAnBK;;AAqBNC,IAAAA,eAAe,CAACV,IAAD,EAAO;AACpB,aAAOR,OAAO,CAAE,cAAF,EAAiB;AAC7BmB,QAAAA,MAAM,EAAE,KADqB;AAE7BC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAed,IAAf;AAFuB,OAAjB,CAAd;AAID,KA1BK;;AA2BNe,IAAAA,aAAa,CAACf,IAAD,EAAO;AAClB,aAAOR,OAAO,CAAE,aAAF,EAAgB;AAC5BmB,QAAAA,MAAM,EAAE,MADoB;AAE5BC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAed,IAAf;AAFsB,OAAhB,CAAd;AAID,KAhCK;;AAiCN;AACAgB,IAAAA,MAAM,CAACC,OAAD,EAAU;AACd,aAAOzB,OAAO,CAAE,WAAUyB,OAAQ,EAApB,EAAuB;AACnCN,QAAAA,MAAM,EAAE;AAD2B,OAAvB,CAAd;AAGD;;AAtCK;AADE,CAAZ;AA2CA,eAAeT,GAAf","sourcesContent":["const BASE_URL = 'http://localhost:3001';\n\nconst delay = ms => new Promise(resolve => setTimeout(resolve, ms));\nconst randomNumber = (min = 0, max = 1) =>\n  Math.floor(Math.random() * (max - min + 1)) + min;\nconst simulateNetworkLatency = (min = 30, max = 1500) =>\n  delay(randomNumber(min, max));\n\nasync function callApi(endpoint, options = {}) {\n  await simulateNetworkLatency();\n\n  options.headers = {\n    'Content-Type': 'application/json',\n    Accept: 'application/json',\n  };\n\n  const url = BASE_URL + endpoint;\n  const response = await fetch(url, options);\n  const data = await response.json();\n\n  return data;\n}\n\nconst api = {\n  tienda: {\n    listPedidosActivos() {\n      // return fetch('http://localhost:3001/api/pedidos/')\n      return callApi('/api/pedidos/pedido/activo');\n\n    },\n    listPedidosInactivos() {\n      // return fetch('http://localhost:3001/api/pedidos/')\n      return callApi('/api/pedidos/pedido/inactivos');\n    },\n    listClientes() {\n      // return fetch('http://localhost:3001/api/pedidos/')\n      return callApi('/api/user/');\n    }, listProductos() {\n      // return fetch('http://localhost:3001/api/pedidos/')\n      return callApi('/api/tienda/');\n    }, listProductosPorId(id) {\n      // return fetch('http://localhost:3001/api/pedidos/')\n      return callApi(`/api/pedidos/${id}`);\n    },\n    \n    updateProductos(data) {\n      return callApi(`/api/tienda/`, {\n        method: 'PUT',\n        body: JSON.stringify(data),\n      });\n    },\n    logearUsuario(data) {\n      return callApi(`/auth/login`, {\n        method: 'post',\n        body: JSON.stringify(data),\n      });\n    },\n    // Lo hubiera llamado `delete`, pero `delete` es un keyword en JavaScript asi que no es buena idea :P\n    remove(badgeId) {\n      return callApi(`/badges/${badgeId}`, {\n        method: 'DELETE',\n      });\n    },\n  },\n};\n\nexport default api;\n"]},"metadata":{},"sourceType":"module"}